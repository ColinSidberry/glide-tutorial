/* TODO:
     - table striping
     - table col centering style
     - looser spacing on screen
     - responsive mode
     - update demo
     - hyphenation
     - remove slide from toc where slide==section
     */

$black: #000;
$near-black: #111;
$dark-gray: #333;
$mid-gray: #555;
$gray: #777;
$silver: #999;
$light-silver: #aaa;
$moon-gray: #ccc;
$light-gray: #eee;
$near-white: #f4f4f4;
$white: #fff;

$transparent: transparent;

$black-90: rgba(0, 0, 0, .9);
$black-80: rgba(0, 0, 0, .8);
$black-70: rgba(0, 0, 0, .7);
$black-60: rgba(0, 0, 0, .6);
$black-50: rgba(0, 0, 0, .5);
$black-40: rgba(0, 0, 0, .4);
$black-30: rgba(0, 0, 0, .3);
$black-20: rgba(0, 0, 0, .2);
$black-10: rgba(0, 0, 0, .1);
$black-05: rgba(0, 0, 0, .05);
$black-025: rgba(0, 0, 0, .025);
$black-0125: rgba(0, 0, 0, .0125);

$white-90: rgba(255, 255, 255, .9);
$white-80: rgba(255, 255, 255, .8);
$white-70: rgba(255, 255, 255, .7);
$white-60: rgba(255, 255, 255, .6);
$white-50: rgba(255, 255, 255, .5);
$white-40: rgba(255, 255, 255, .4);
$white-30: rgba(255, 255, 255, .3);
$white-20: rgba(255, 255, 255, .2);
$white-10: rgba(255, 255, 255, .1);
$white-05: rgba(255, 255, 255, .05);
$white-025: rgba(255, 255, 255, .025);
$white-0125: rgba(255, 255, 255, .0125);

$dark-red: #e7040f;
$red: #ff4136;
$light-red: #ff725c;
$orange: #ff6300;
$gold: #ffb700;
$yellow: #ffd700;
$light-yellow: #fbf1a9;
$purple: #5e2ca5;
$light-purple: #a463f2;
$dark-pink: #d5008f;
$hot-pink: #ff41b4;
$pink: #ff80cc;
$light-pink: #ffa3d7;
$dark-green: #137752;
$green: #19a974;
$light-green: #9eebcf;
$navy: #001b44;
$dark-blue: #00449e;
$blue: #357edd;
$light-blue: #96ccff;
$lightest-blue: #cdecff;
$washed-blue: #f6fffe;
$washed-green: #e8fdf5;
$washed-yellow: #fffceb;
$washed-red: #ffdfdf;

// font weights: always refer to in this document by number, not names
//
// 100 super-light           (not loaded)
// 200 extra-light           (not loaded)
// 300 light                 running text
// 400 regular               headlines and words that should "pop"
// 600 semibold              bold
// 700 bold                  (not used yet)
// 800 extra-bold            (not loaded)
// 900 black                 (not loaded)

$code-font-size: 0.9rem;
$theme-logo: var(--theme-logo);

// ============================================================ core typography

body {
  font-family: var(--theme-bodyfont);
  font-weight: 300;
}

h1, h2, h3, h4, h5, h6 {
  color: $near-black;
  font-weight: 600;
  font-family: var(--theme-headfont);
}

h1 {
  margin-bottom: 1em;
  @media print {
    margin-top: 0;
  }
}

h2 {
  margin-top: 2em;
}

h3 {
  margin-bottom: 1em;
}

h4 {
  margin-bottom: 0.75em;
}

h5 {
  // should have very few of these
  margin-bottom: 0;
}

// todo h6

.page-content {
  font-weight: 300;
  font-size: 1.2em;
}

.page-content a {
  color: $dark-blue;
  font-weight: 400;
  text-decoration: none;

  &:hover {
    text-decoration: underline;
  }

  @media print {
    &::after { content: " <" attr(href) ">"; }
  }
}

.page-content p {
  // it should be ok to change this --- if you do so, change the height of
  // <br> inside a .line-block to be about the same height.
  line-height: 1.5;
}

blockquote {
  font-style: italic;
  width: 35rem;

  .attribution {
    font-size: 0.9em;
    margin-top: -0.75em;
    text-align: right;
  }
}

b, strong {
  font-weight: 600;
}

// Uses for `varName`, :title:`Book Title`
.page-content cite {
  color: $navy;
  font-style: italic;
  font-weight: 400;
}

dt {
  font-weight: 400;
  margin-bottom: 0.25em;
}

dd {
  margin-bottom: 0.5em; //  !important; // fixme
  margin-left: 1.5em;

  > p:first-child { margin-top: 0; }
}

// command-line switches
kbd {
  font-family: var(--theme-codefont);
  font-size: $code-font-size;
  font-weight: 400;

  &:before { content: "«"; color: $silver; }
  &:after { content: "»"; color: $silver; }
}

// show inline code/tech (used by sphinx for ``x = 7``)
code {
  font-family: var(--theme-codefont);
  font-size: 0.95em; // $code-font-size; todo
  font-weight: 400;
  color: $navy;
  border: solid 1px $light-gray;
  padding: 0 0.25em;

  @media print {
    border-color: $moon-gray;
  }
}

div.math {
  // todo doc
  font-size: 1.2em;
}

// ================================================================= line block
// these are |-joined lines, like this:
//
//   | Hello
//   | World
//
// They're useful to force line breaks for all systems.
//
// Many docs use a single one of these for the side-effect of providing a
// break between two things that would otherwise jam together, like this::
//
//   <something>
//
//   |
//
//   <else>
//
// This works fine.

.line-block {
  margin: 1em 0;
  padding-left: 0.25em;
  border-left: solid 1px $moon-gray;

  // not being real paragraphs, they don't have a natural line-height.
  .line:nth-child(n+1) {
    margin: 0.25em;
  }

  // "paragraphs" inside a line-block (an empty |) should be a bit tighter.
  br {
    display: block;
    content: "";
    margin-top: 1.2em;
  }
}


// =============================================================, ol, and hlist

//
// protect this by only doing it explicitly for the main parts of the page


.page-content {
  ul { list-style-type: circle !important; /* todo why important */}

  ol, ul {
    margin: 1em 0;
    padding-left: 1.5em;
    //list-style-type: circle;

    // "simple" class added when a list are all non-paragraph items
    &.simple {
      @media print {
        //page-break-inside: avoid;
      }

      li {
        margin-top: 0.5em;
        margin-bottom: 0.5em;
      }
    }
  }

  //ul {
  //  list-style: disc;
  //}

  // In a simple list, child lists be tighter. Sphinx doesn't mark lists as simple
  // if any child, no matter how deeply, are not simple, so this is safe.
  // Providing selectors for four levels of nesting, which is plenty. Makes these
  // slightly smaller for each level.

  // not sure if smaller is good for handouts or latex-friendly. todo
  .simple > li {
    > ul, ol {
      margin-top: 0.5em;
      margin-bottom: 0.5em;
      font-size: 0.95em;

      > li > ul, li > ol {
        margin-top: 0.5em;
        margin-bottom: 0.5em;
        font-size: 0.95em;

        > li > ul, li > ol {
          margin-top: 0.5em;
          margin-bottom: 0.5em;
          font-size: 0.95em;
        }
      }
    }
  }

  li:first-child {
    // the first list item should never have a margin; this is important because
    // normal collapsing won't work if the list is inside of something else,
    // like a container or an hlist.
    margin-top: 0 !important;
  }

  // hlists use tables, so use table formatting to line up the columns
  //  (note for future: it wouldn't surprise me if these moved to flexbox one
  //  day, so this might break.)
  table.hlist > tbody > tr > td {
    vertical-align: top;

    & > ul {
      // This intentionally sets all four! These shouldn't get margins because
      // the table will already provide margins for them.
      margin: 0 5em 0 0;
    }
  }
}

// ===================================================================== tables
//
// For safety, namespacing all of these to .docutils, which is put on all
// tables created by sphinx automatically.

// non-docutils tables (sometime docutils emits, but not as a real "table")
table {
  border-collapse: collapse;
  border-spacing: 0;
  border: none;
  margin-top: 1em;
  margin-bottom: 1em;
}

td {
  padding: 0;
}

table.docutils {
  border: none;
  border-collapse: collapse;
  border-spacing: 0;
  empty-cells: show;
  font-size: 0.9em;

  th {
    background-color: $moon-gray;
    font-weight: 400;
  }

  td, th {
    padding: 0.25em;
    margin: 0;
    border-color: $light-gray;
  }

  tr:nth-child(odd) {
    background-color: $light-gray;
  }

  // todo? td-center-2 td-center-3 td-center-5 for just those cols?

  // adding td-center or td-right to a *table* centers/rights cols after first
  &.td-center th:not(:first-child),
  .td-center td:not(:first-child) {
    text-align: center;
  }

  &.td-right th:not(:first-child),
  .td-right td:not(:first-child) {
    text-align: right;
  }

  // td-center-all or td-right-all does same thing for all cols
  &.td-center-all th,
  .td-center-all td {
    text-align: center;
  }

  &.td-right-all th,
  .td-right-all td {
    text-align: right;
  }
}

// field list tables should override this --- these are the table that are meant
// to have metadata about the document (or similar things) and are made like:
//
// :name: Elmo
// :color: red

table.field-list {
  .field-name {
    font-weight: 400;
    text-align: left;
    background-color: $light-gray;
  }
  .field-body {
    background-color: white;
  }
}


// ================================================================ code blocks
//
// These are use by .. code-block, .. literalinclude, and .. parsed-literal.
//
// The `width` in `pre` is very sensitive to font size (is there a way to
// specify how many characters fit in a block?).

pre {
  font-family: var(--theme-codefont);
  font-size: $code-font-size;
  font-weight: 400;
  // with source sans code, this lets us have 80 chars across. not sure why.
  width: 48em;
  border: solid 1px $moon-gray;
  padding: 0.5em;
  margin-bottom: 1em;
}

.highlight, .parsed-literal-wrapper {
  // need this; otherwise, it defaults to green
  background-color: transparent;
  margin-bottom: 1em;

  // experimenting with doing this inside
  //  font-family: var(--theme-codefont);
  //font-size: $code-font-size;
  //font-weight: 400;
  //// with source sans code, this lets us have 80 chars across. not sure why.
  //width: 48em;
  //border: solid 1px $moon-gray;
  //padding: 0.5em;
}

// first matches most consoles, second where it contains no markup
pre.console,
.console > .highlight > pre {
  //background-color: #eee;
  color: $mid-gray;
  font-weight: 400;
  border-radius: 0.5em;
  border-color: $light-silver;
}

.highlight .hll {
  background-color: $washed-yellow;
  margin-left: -0.35em;
  padding-left: 0.15em;
  border-left: solid 0.20em $yellow;
}

// for code blocks, but also other captioned places
.caption-text {
  font-style: italic;
  font-size: 0.8em;
  color: $dark-gray;
  letter-spacing: 0.025em;
}

.code-block-caption {
  // should other places get this? todo
  margin-bottom: 0.25em;
}

// todo: code-80? pre-80? pre-w80?
// Font sizing for code/literal include blocks (100 is standard)
.code-50 pre { font-size: 0.45rem; }
.code-60 pre { font-size: 0.54rem; }
.code-70 pre { font-size: 0.63rem; }
.code-80 pre { font-size: 0.72rem; }
.code-90 pre { font-size: 0.81rem; }
.code-100 pre { font-size: 0.9rem; }
.code-110 pre { font-size: 0.99rem; }
.code-120 pre { font-size: 1.08rem; }
.code-130 pre { font-size: 1.17rem; }
.code-140 pre, pre.code-140 { font-size: 1.26rem; }
.code-150 pre { font-size: 1.35rem; }
.code-160 pre { font-size: 1.44rem; }
.code-170 pre { font-size: 1.53rem; }
.code-180 pre { font-size: 1.62rem; }
.code-190 pre { font-size: 1.71rem; }
.code-200 pre { font-size: 1.80rem; }

// todo: code-5c? pre-5c? pre-c5?
// Number of lines that fit inside border (80c is standard)
// The LaTeX builder won't deal with more than ~85, plus those are gross anyway
.code-5c pre { width: 3em; }
.code-10c pre { width: 6em; }
.code-15c pre { width: 9em; }
.code-20c pre { width: 12em; }
.code-25c pre { width: 15em; }
.code-30c pre, pre.code-30c { width: 18em; }
.code-35c pre, pre.code-35c { width: 21em; }
.code-40c pre { width: 24em; }
.code-45c pre { width: 27em; }
.code-50c pre { width: 30em; }
.code-55c pre { width: 33em; }
.code-60c pre { width: 36em; }
.code-65c pre { width: 39em; }
.code-70c pre { width: 42em; }
.code-75c pre { width: 45em; }
.code-80c pre { width: 48em; }
.code-85c pre { width: 51em; }

// "span." needed to override pygments
span.linenos {
  margin-right: 0.5em;
  color: $silver;
  background-color: $light-gray;
}

// =========================================== admonitions (note, warning, etc)

.admonition {
  border: solid 1px $light-silver;
  border-top-left-radius: 1em;
  border-bottom-right-radius: 1em;
  overflow: hidden;
  padding: 0 1rem 0 1rem;
  margin-bottom: 1em;

  // only notes are intended to be unimportant details, so reduce the size of
  // the text for all the non-title parts.
  & > p:nth-child(n+3) {
    font-size: 0.9em;
  }

  @media print {
    border-radius: 0;
    border: none;
    border-left: solid 5px $light-silver;
  }

  // pull the first real paragraph up to being aside the title of the
  // admonition, so they appear side-by-side.

  // the colored part that is labeled "WARNING" or "ERROR"
  .admonition-title {
    color: white;
    background-color: $light-silver;
    display: inline-block;
    // finicky: get it to align with text in the admonition
    margin: 0 0 0 -1rem !important;
    padding: 1rem 1rem 0.75rem 1rem !important;
    text-transform: uppercase;
    font-size: 0.75em;
    font-weight: 400;
    letter-spacing: 0.1em;

    @media print {
      font-weight: 500;
      color: $mid-gray;
      background-color: transparent;
    }
  }

  // The first real (second actual) paragraph: put this next to title
  & > p:nth-child(2) {
    display: inline-block;
    margin: 0 0 0 0 !important;
    padding: 0.5em 0.5em 0.5em 0.25em !important;
    font-weight: 400;
  }
}

.admonition.important,
.admonition.attention {
  border-color: $light-red;
  .admonition-title { background-color: $washed-red; color: $red; }
}

.admonition.caution,
.admonition.warning {
  border-color: $orange;
  .admonition-title { background-color: $orange; }
}

.admonition.error,
.admonition.danger {
  border-color: $red;
  .admonition-title { background-color: $red; }
}

.admonition.seealso,
.admonition.hint,
.admonition.tip {
  border-color: $light-blue;
  .admonition-title { background-color: $lightest-blue; color: $blue; }
}

// perhaps this should default smaller?
.admonition.note {
  border-color: $moon-gray;
  .admonition-title { background-color: $light-gray; color: $silver; }
}

// ================================= topic: a bit of side-material with a title

.topic-title {
  margin-top: 0;
  font-weight: 400;
}

.topic {
  background-color: $light-gray;
  padding: 1em;
  margin-bottom: 1em;
}

// Given that the topic wants to provide background color via padding, make sure
// that things inside of this won't adding margins.
.topic > *:last-child {
  margin-bottom: 0;

  > *:last-child {
    margin-bottom: 0;

    > *:last-child {
      margin-bottom: 0;
    }
  }
}

// =================================== hover-reveal (hide solution until hover)
//
// Add to a topic like::
//
//   .. topic:: Our Model
//      :class: hover-reveal
//
//      Here are the secrets of our model...
//
// Or to a generic container like::
//
//    .. container:: hover-reveal
//
//      Here are the secrets of our model...
//
// Or to a code block like:
//
//    .. code-block::
//      :class: hover-reveal-code
//

// for hover-reveal-code, we want the actual hidden/hover thing to be the pre
.hover-reveal-code pre,
.hover-reveal {
  position: relative;
  border: dashed 1px #999;
  background-color: $light-gray;

  // show message
  &:before {
    content: "Hover to reveal";
    display: block;
    position: absolute;
    top: 1.25em;
    text-align: center;
    width: 100%;
  }
}

// Code blocks have very little padding and are often short, so:
.hover-reveal-code pre:before {
  top: 0.60em;
}

// Everything inside of this is hidden...
.hover-reveal-code pre > *,
.hover-reveal > * {
  visibility: hidden;
}

// ... unless we are hovering over it
.hover-reveal-code pre:hover,
.hover-reveal:hover {
  background-color: transparent;

  &:before { visibility: hidden; }
  * { visibility: visible; }
}

// when a simple container becomes a hover-reveal, give it some L/R margins
.hover-reveal.container > * {
  margin-left: 1em;
  margin-right: 1em;
}

@media print {
  .hover-reveal-code pre > *,
  .hover-reveal > * {
    visibility: visible;;
  }

  .hover-reveal-code pre,
  .hover-reveal:before {
    content: "";
  }

  .hover-reveal-code pre,
  .hover-reveal {
    border: inherit;
    background-color: inherit;
    //padding: 0;
    //margin-bottom: 1em;
  }
}


// deprecated: hover-reveal-tight

//.hover-reveal-tight {
//  padding: 0;
//  margin-bottom: 0;
//  max-width: 38em;
//  min-width: 39em;
//}
//
//.hover-reveal-tight:hover {
//  border-color: transparent;
//}
//
//.hover-reveal-tight .highlight {
//  margin: 0;
//  padding: 0;
//  width: 100%;
//}


// ===================================================================== colors

// todo: should we make our names tachyon names? how will will this work w/latex?

// increase weight to 400 for these so they read a bit easier, esp light colors
.cmd { font-weight: 400; color: $navy; }
.red { font-weight: 400; color: $red; }
.blue { font-weight: 400; color: $dark-blue; }
.orange { font-weight: 400; color: $orange; }
.green { font-weight: 400; color: $dark-green; }
.tan { font-weight: 400; color: $gold; }
.cyan { font-weight: 400; color: $light-green;}

// use for marking something as "gone": struck out and less obvious
.gone { text-decoration: line-through; color: $gray; }

.inv-red { font-weight: 500; background-color: $red; color: white; }
// todo: inv-green and inv-orange, too?


// fixme: needed? when would there be a link in a console?
.console a {
  color: inherit !important;
}

// ======================================== sidebar: aside comment on something
//
// This is not the page sidebar; this is a bit of side-commentary on something.

.sidebar {
  margin-left: 1.5em;
  float: right;
  width: 30%;
  font-size: 0.8em;
}

.sidebar-title {
  font-weight: 400;
}

// fixme: wtf
.sidebar50 {
  width: 50%;
}

.sidebar45 {
  width: 45%;
}

.sidebar40 {
  width: 40%;
}

// difficult to write: todo should the style go on highlight and not pre?
.center {
  // testing -- since this trial breaks pre/highlight, forcing this to test
  //width: 50%;
}

// experimenting
.center > * {
//  display: block;
  background-color: pink;
  margin-left: auto;
  margin-right: auto;
  //width: 50%;
//  background-color: pink;
}

/* =============== PAGE STRUCTURE =============== */

@media print {
  html { font-size: 1em }
}
body {
  margin: 0;
  border-top: solid 30px var(--theme-clientcolor);
  @media (min-width: 1150px) { border-top: none }

  // you can change this, but check things carefully if you do
  background-color: var(--theme-backgroundcolor);

  // this makes sure that the browser doesn't try to change font sizes itself in
  // a way that causes text to overflow boxes rather than growing them
  -webkit-text-size-adjust: none
}

.page-content {
  position: absolute;
  top: 0;
  left: 0;
  padding-bottom: 4em;

  /* fit nicely on ipad portrait */
  max-width: 800px;
  margin: 2em 2em 0 5%;
  min-height: 100vh;

  @media (min-width: 768px) {
    margin-left: 5%;
    margin-right: 5%;
  }

  @media (min-width: 1150px) {
    left: 325px;
    margin-left: 0;
    margin-right: auto;
    width: 1150px;
  }

  @media print {
    left: 0;
    margin: 0 3%;
    width: 1000px;
    padding-bottom: 0;
  }
}

#page-sidebar { display: none; }

@media (min-width: 1150px) {
  #page-sidebar {
    display: block;
    width: 275px;
    background-color: var(--theme-sidebarcolor);
    color: $mid-gray;
    border-right: solid 0 transparent;
    border-bottom: solid 0 transparent;
    border-bottom-right-radius: 1em;
    box-shadow: 0 0 3px $silver;

    > header {
      padding: 1em;
      text-align: center;
      color: white;
      background-color: var(--theme-clientcolor);
    }

    a {
      color: inherit;
      text-decoration: none;
    }

    .project {
      background-image: var(--theme-logo);
      background-repeat: no-repeat;
      background-position: center;
      background-size: contain;
      height: 2em;
    }
    .project::content { content: ""; }

    .title { font-weight: 400; font-size: 1.5em; }
    .backlink { font-size: 0.7em; }
  }

  #toc {
    display: block;
    padding: 1em;

    // note that this affects all ul below
    ul { margin: 0; list-style: none; padding: 0 }

    // first ul is just the top doc; the sections are nested in that
    > ul > li {
      font-weight: 400;

      > ul > li {
        margin-top: 1.25em;

        > ul > li {
          margin-top: 0.65em;
          margin-left: 0.5rem;
          font-size: 90%;
          font-weight: 300;

          > ul > li {
            margin-top: 0.35em;
            margin-left: 0.5rem;
            font-size: 90%;

            > ul { display: none; }
          }
        }
      }
    }
  }
}

@media print {
  #page-sidebar { display: none; }
}

.logo { float: right; height: 2em; }

h1 {
  //background-image: var(--theme-logo);
  //background-repeat: no-repeat;
  //background-position: right;
  //background-size: contain;
}

// don't need as much space for the first group-level heading below title
.page-content > .section > .section:first-of-type h2 {
  margin-top: 1em;
}


// ======================================================================= misc

// where is this used?
// deprecate clear

.clear {
  clear: both;
}

// needs a much better
// deprecate left

.left {
  text-align: left;
}


@media print {
  .noprint {
    display: none !important;
  }
}

// todo: we need a better api here
//
// .print-hide (hide from print)
// .print-show (show, even if normally wouldn't)
// .print-only (only only on print)
//
// same for .handouts, .slides (and should plan for .epub, too
//
// this kind of stuff isn't perfect -- it's better to use .. only, so the
// assets are purely skipped. when would we need this? is this just for
// printing?


// keep this --- it hides things used on the reveal builder
// todo: should the reveal builder be renamed "slides"?

.raw-reveal {
  display: none;
}


// deprecate img.image-border

img.image-border {
  border: solid 1px black;
}

// todo: is this used anywhere? a sidebar would be better

img.align-right {
  float: right;
}

// todo wrong name
.line-height-1 pre {
  line-height: 1.2;
}

// ==================================================================== compare
//
// Side-by-side containers (code blocks ok, too)
//
// These are rather janky, but they work ok, and are all through existing repos.
// If this gets replaced with a flexbox model, it would be nice for it to have
// a compatibility layer for these.
//
// If these are placed on a code/parsed-literal, they'll automatically adjust
// the width of that.

.compare > div {
  width: 49.0%;
  display: inline-block;
  vertical-align: top;
}

.compare pre {
  width: 27em;
  font-size: 0.85rem;
}

// other sizes: use both compare and size on the container
//
// compare compare23   - 20% / 30%
// compare compare32   - 30% / 20%
// compare compare12   - 17% / 33%
// compare compare21   - 33% / 17%

.compare23 > div:first-child pre,
.compare32 > div:last-child pre { width: 22em; }
.compare23 > div:last-child pre,
.compare32 > div:first-child pre { width: 32em; }

.compare12 > div:first-child pre,
.compare21 > div:last-child pre { width: 20em }
.compare12 > div:last-child pre,
.compare21 > div:first-child pre { width: 34em; }

.compare23 > div:first-child { width: 39%; }
.compare23 > div:last-child { width: 59%; }
.compare32 > div:first-child { width: 59%; }
.compare32 > div:last-child { width: 39%; }

.compare12 > div:first-child { width: 36%; }
.compare12 > div:last-child { width: 58%; }
.compare21 > div:first-child { width: 58%; }
.compare21 > div:last-child { width: 36%; }

